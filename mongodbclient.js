// Generated by CoffeeScript 1.8.0
(function() {
  var addingNewUser, addingSeriesToSubscribedTvShows, authenticatingUserCredentials, checkingIfEmailAlreadyRegistered, dbConfig, format, gettingSubscribedTvShows, mongoClient, removingSeriesFromSubscribedTvShows, _db;

  mongoClient = require('mongodb').MongoClient;

  format = require('util').format;

  dbConfig = {
    "dbuser": "",
    "dbpassword": ""
  };

  exports.setDbConfig = function(dbuser, dbpassword) {
    dbConfig.dbuser = dbuser;
    dbConfig.dbpassword = dbpassword;
  };

  _db = "";

  mongoClient.connect("mongodb://" + dbConfig.dbuser + ":" + dbConfig.dbpassword + "@ds029640.mongolab.com:29640/tvserieswebappdatabase", function(err, db) {
    if (!err) {
      return _db = db;
    }
  });

  exports.checkIfEmailAlreadyRegistered = function(email, callback) {
    if (_db) {
      checkingIfEmailAlreadyRegistered(email, _db, callback);
    } else {
      mongoClient.connect("mongodb://" + dbConfig.dbuser + ":" + dbConfig.dbpassword + "@ds029640.mongolab.com:29640/tvserieswebappdatabase", function(err, db) {
        if (err) {
          callback({
            "err": err,
            "status": false,
            "data": ""
          });
        } else {
          _db = db;
          checkingIfEmailAlreadyRegistered(email, db, callback);
        }
      });
    }
  };

  checkingIfEmailAlreadyRegistered = function(email, db, callback) {
    var collection, result;
    result = {
      "err": "",
      "status": "",
      "data": ""
    };
    collection = db.collection('useraccountdetails');
    collection.find({
      "email": email
    }).toArray(function(err, results) {
      console.log(results);
      if (results.length > 0) {
        result.status = true;
      } else {
        result.status = false;
      }
      result.err = err;
      result.data = results;
      return callback(result);
    });
  };

  exports.addNewUser = function(requestingUser, callback) {
    if (_db) {
      addingNewUser(requestingUser, _db, callback);
    } else {
      mongoClient.connect("mongodb://" + dbConfig.dbuser + ":" + dbConfig.dbpassword + "@ds029640.mongolab.com:29640/tvserieswebappdatabase", function(err, db) {
        if (err) {
          callback({
            "err": err,
            "status": false,
            "data": {
              "firstName": "",
              "lastName": "",
              "username": "",
              "email": "",
              "signinStatus": false,
              "siginPage": "/signin",
              "dashboardPage": "",
              "status": "Sign in",
              "toggle": ""
            }
          });
        } else {
          _db = db;
          addingNewUser(requestingUser, db, callback);
        }
      });
    }
  };

  addingNewUser = function(requestingUser, db, callback) {
    var collection, result, user;
    result = {
      "err": "",
      "status": "",
      "data": ""
    };
    user = {
      "firstName": "",
      "lastName": "",
      "username": "",
      "email": "",
      "signinStatus": false,
      "siginPage": "/signin",
      "dashboardPage": "",
      "status": "Sign in",
      "toggle": ""
    };
    collection = db.collection('useraccountdetails');
    collection.insert(requestingUser, function(err, docs) {
      if (err) {
        result.status = false;
      } else {
        user["firstName"] = docs[0]["firstName"];
        user["lastName"] = docs[0]["lastName"];
        user["username"] = docs[0]["username"];
        user["email"] = docs[0]["email"];
        user["signinStatus"] = true;
        user["siginPage"] = "";
        user["dashboardPage"] = "/dashboard";
        user["status"] = docs[0]["username"];
        user["toggle"] = "dropdown";
      }
      result.err = err;
      result.data = user;
      callback(result);
    });
  };

  exports.authenticateUserCredentials = function(email, password, callback) {
    console.log("authenticating user+++");
    if (_db) {
      authenticatingUserCredentials(email, password, _db, callback);
    } else {
      mongoClient.connect("mongodb://" + dbConfig.dbuser + ":" + dbConfig.dbpassword + "@ds029640.mongolab.com:29640/tvserieswebappdatabase", function(err, db) {
        if (err) {
          callback({
            "err": err,
            "status": false,
            "data": {
              "firstName": "",
              "lastName": "",
              "username": "",
              "email": "",
              "signinStatus": false,
              "siginPage": "/signin",
              "dashboardPage": "",
              "status": "Sign in",
              "toggle": ""
            }
          });
        } else {
          _db = db;
          authenticatingUserCredentials(email, password, db, callback);
        }
      });
    }
  };

  authenticatingUserCredentials = function(email, password, db, callback) {
    var collection, result, user;
    result = {
      "err": "",
      "status": "",
      "data": ""
    };
    user = {
      "firstName": "",
      "lastName": "",
      "username": "",
      "email": "",
      "signinStatus": false,
      "siginPage": "/signin",
      "dashboardPage": "",
      "status": "Sign in",
      "toggle": ""
    };
    collection = db.collection('useraccountdetails');
    collection.find({
      "email": email
    }).toArray(function(err, results) {
      if (!err && results.length > 0 && results[0].password === password) {
        user["firstName"] = results[0]["firstName"];
        user["lastName"] = results[0]["lastName"];
        user["username"] = results[0]["username"];
        user["email"] = results[0]["email"];
        user["signinStatus"] = true;
        user["siginPage"] = "";
        user["dashboardPage"] = "/dashboard";
        user["status"] = results[0]["username"];
        user["toggle"] = "dropdown";
        result.status = true;
      } else {
        result.status = false;
      }
      result.err = err;
      result.data = user;
      callback(result);
    });
  };

  exports.addSeriesToSubscribedTvShows = function(subscribingTvSeries, callback) {
    if (_db) {
      addingSeriesToSubscribedTvShows(subscribingTvSeries, _db, callback);
    } else {
      mongoClient.connect("mongodb://" + dbConfig.dbuser + ":" + dbConfig.dbpassword + "@ds029640.mongolab.com:29640/tvserieswebappdatabase", function(err, db) {
        if (err) {
          callback({
            "err": err,
            "status": false,
            "data": ""
          });
        } else {
          _db = db;
          addingSeriesToSubscribedTvShows(subscribingTvSeries, db, callback);
        }
      });
    }
  };

  addingSeriesToSubscribedTvShows = function(subscribedTvSeries, db, callback) {
    var collection, result;
    result = {
      "err": "",
      "status": "",
      "data": ""
    };
    collection = db.collection('usersubscribedtvshows');
    collection.insert(subscribedTvSeries, function(err, docs) {
      if (err) {
        result.status = false;
      }
      result.err = err;
      result.status = true;
      result.data = docs;
      callback(result);
    });
  };

  exports.removeSeriesFromSubscribedTvShows = function(unsubscribingTvSeries, callback) {};

  removingSeriesFromSubscribedTvShows = function(unsubscribingTvSeries, db, callback) {};

  exports.getSubscribedTvShows = function(username, callback) {
    if (_db) {
      gettingSubscribedTvShows(username, _db, callback);
    } else {
      mongoClient.connect("mongodb://" + dbConfig.dbuser + ":" + dbConfig.dbpassword + "@ds029640.mongolab.com:29640/tvserieswebappdatabase", function(err, db) {
        if (err) {
          callback({
            "err": err,
            "status": false,
            "data": []
          });
        } else {
          _db = db;
          gettingSubscribedTvShows(username, db, callback);
        }
      });
    }
  };

  gettingSubscribedTvShows = function(subscriber, db, callback) {
    var collection, result;
    result = {
      "err": "",
      "status": "",
      "data": ""
    };
    collection = db.collection('usersubscribedtvshows');
    collection.find({
      "subscriber": subscriber
    }).toArray(function(err, results) {
      if (err) {
        result.status = false;
      }
      result.err = err;
      result.data = results;
      console.log(result);
      return callback(result);
    });
  };

}).call(this);


//# sourceMappingURL=mongodbclient.js.map
